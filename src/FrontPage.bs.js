// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var Json_encode = require("@glennsl/bs-json/src/Json_encode.bs.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var ReasonApollo = require("reason-apollo/src/ReasonApollo.bs.js");

function ste(prim) {
  return prim;
}

function parse(parser, json) {
  return /* record */[
          /* total */Json_decode.field("total", Json_decode.$$int, json),
          /* items */Json_decode.field("items", (function (param) {
                  return Json_decode.list(parser, param);
                }), json)
        ];
}

var Collection = /* module */[/* parse */parse];

var TravelAlert = /* module */[];

function parse$1(json) {
  return /* record */[
          /* region */Json_decode.field("region", (function (param) {
                  return Json_decode.withDefault("us", Json_decode.string, param);
                }), json),
          /* text */Json_decode.optional((function (param) {
                  return Json_decode.field("text", Json_decode.string, param);
                }), json),
          /* travelAlert */undefined
        ];
}

var Site = /* module */[/* parse */parse$1];

function parse$2(json) {
  return /* record */[
          /* site */Json_decode.optional((function (param) {
                  return Json_decode.field("site", parse$1, param);
                }), json),
          /* siteCollection */Json_decode.optional((function (param) {
                  return Json_decode.field("siteCollection", (function (param) {
                                return parse(parse$1, param);
                              }), param);
                }), json)
        ];
}

var QueryRoot = /* module */[/* parse */parse$2];

var QueryConfig = /* module */[
  /* query */"query getSiteSettings($region: String!, $locale: String!) {\n    siteCollection(where: {region: $region}, locale: $locale) {\n      total\n      items {\n        region\n        text\n        travelAlert {\n          title\n          url\n          expiryDate\n        }\n      }\n    }\n  }",
  /* parse */parse$2
];

var SiteSettingsQuery = ReasonApollo.CreateQuery(QueryConfig);

var component = ReasonReact.statelessComponent("FrontPage");

function encodeVariables(variables) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "region",
                variables[/* region */0]
              ],
              /* :: */[
                /* tuple */[
                  "locale",
                  variables[/* locale */1]
                ],
                /* [] */0
              ]
            ]);
}

function make(_children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (_self) {
              return ReasonReact.element(undefined, undefined, Curry.app(SiteSettingsQuery[/* make */3], [
                              Caml_option.some(encodeVariables(/* record */[
                                        /* region */"is",
                                        /* locale */"is-IS"
                                      ])),
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              (function (param) {
                                  var result = param[/* result */0];
                                  if (typeof result !== "number") {
                                    if (result.tag) {
                                      console.log(result[0]);
                                    }
                                    
                                  }
                                  return "foo";
                                })
                            ]));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.ste = ste;
exports.Collection = Collection;
exports.TravelAlert = TravelAlert;
exports.Site = Site;
exports.QueryRoot = QueryRoot;
exports.QueryConfig = QueryConfig;
exports.SiteSettingsQuery = SiteSettingsQuery;
exports.component = component;
exports.encodeVariables = encodeVariables;
exports.make = make;
/* SiteSettingsQuery Not a pure module */
